from pylab import *
mpl.rcParams['font.sans-serif'] = ['Times New Roman']

#labels表示你不同类别的代号，比如这里的demo中有13个类别
labels = ['WHE', 'GH', 'GAR', 'URB', 'FL', 'NCL', 'OTH', 'WAT']
tick_marks = np.array(range(len(labels))) + 0.5

def plot_confusion_matrix(cm, title='Confusion Matrix', cmap=plt.cm.binary):
    # plt.imshow(cm, interpolation='nearest', cmap=cmap)
    plt.imshow(cm, interpolation='nearest', cmap='Greys', vmin=999999999, vmax=1000000000)
    plt.title(title)
    # plt.colorbar()
    xlocations = np.array(range(len(labels)))
    plt.xticks(xlocations, labels, rotation=0)
    plt.yticks(xlocations, labels)
#_2019_S2A
# cm = np.array([[2318331, 0, 488, 1, 401, 16, 46, 3],
#                 [308, 104, 0, 756, 0, 3, 0, 0],
#                 [3011, 0, 109386, 68, 128, 226, 689, 0],
#                 [34300, 2, 1102, 1164608, 15682, 8243, 41, 313],
#                 [154, 0, 193, 192, 182447, 10977, 0, 132],
#                 [78, 0, 308, 14053, 2303, 284408, 38, 8],
#                 [688, 0, 1145, 1340, 903, 1217, 2525, 0],
#                 [2627, 0, 27, 5970, 5902, 53, 0, 18360]])
#_2019_GF
# cm = np.array([[6004877, 6518, 189367, 35921, 55406, 129958, 5501, 2251],
#                 [0, 106965, 0, 487, 0, 120, 0, 0],
#                 [1175132, 100099, 1074863, 110364, 347445, 1093986, 36852, 90778],
#                 [0, 2168, 0, 2596488, 515, 799, 4, 9684],
#                 [259, 11160, 425, 60, 277384, 261, 42, 19706],
#                 [26736, 49708, 15326, 40068, 26497, 1138907, 639, 60056],
#                 [105, 0, 0, 150, 65, 93, 2353, 0],
#                 [0, 2809, 0, 15, 0, 0, 0, 92836]])
#_2020_S2A
# cm = np.array([[2282623, 0, 6, 54, 966, 40, 30, 0],
#                 [0, 255, 0, 1775, 0, 1158, 0, 0],
#                 [2885, 0, 367, 21, 12, 128, 4, 0],
#                 [30076, 22, 2, 1074413, 6765, 17294, 11, 57],
#                 [3799, 0, 4, 19037, 178869, 2118, 0, 0],
#                 [564, 0, 74, 7937, 33, 305935, 26, 0],
#                 [7975, 52, 580, 4191, 1769, 2634, 13928, 0],
#                 [287, 0, 0, 9476, 2338, 34, 0, 213680]])
#_2020_Gaofen
# cm = np.array([[11206431, 0, 16532, 359, 849, 5249, 13, 12],
#                 [5, 73969, 260, 15304, 0, 145, 0, 65],
#                 [40566, 4080, 214170, 5069, 2363, 8667, 1030, 15],
#                 [10746, 1397, 485, 2840049, 955, 31048, 0, 1192],
#                 [3482, 12685, 10469, 2510, 48066, 38981, 5312, 723],
#                 [298, 32113, 5451, 51922, 6653, 163646, 0, 7753],
#                 [2616, 1712, 3365, 1660, 678, 4621, 4947, 0],
#                 [1, 0, 0, 0, 0, 571, 0, 50948]])
#_2021_1_S2A
# cm = np.array([[1309229, 1, 0, 2213, 560, 6, 0, 0],
#                 [20, 341, 0, 194, 0, 645, 0, 0],
#                 [1444, 0, 10648, 12, 18, 27, 0, 0],
#                 [24099, 7, 149, 1589216, 17490, 9742, 3, 1222],
#                 [3173, 0, 199, 1063, 631213, 1129, 20, 2],
#                 [34, 0, 1, 7033, 11234, 239550, 0, 15],
#                 [371, 0, 474, 150, 240, 146, 252, 0],
#                 [10, 0, 0, 7403, 3946, 1119, 0, 318241]])
#_2021_1_Gaofen
# cm = np.array([[6026530, 90, 56295, 6419, 15563, 1119, 16506, 0],
#                 [11, 3460, 1844, 2084, 171, 179, 0, 0],
#                 [15435, 290, 169249, 479, 1855, 150, 12, 0],
#                 [29675, 52, 33104, 850567, 4967, 10205, 1915, 136],
#                 [4478, 10449, 206657, 68602, 509760, 140601, 57653, 2881],
#                 [261, 16428, 51282, 267839, 4583, 368278, 73994, 14029],
#                 [2512, 164, 37134, 3087, 705, 30073, 129827, 8],
#                 [77, 2175, 553, 65438, 7978, 42155, 2, 1248807]])
#_2021_2_S2A
# cm = np.array([[1844724, 0, 2259, 11, 32880, 9, 0, 11],
#                 [18, 5017, 8, 3143, 145, 3530, 0, 0],
#                 [30, 0, 508524, 193, 4888, 190, 0, 0],
#                 [20770, 231, 6704, 1166286, 11655, 3998, 0, 173],
#                 [85, 0, 82, 677, 338372, 1020, 0, 7],
#                 [39, 1110, 104, 12321, 1432, 181414, 0, 0],
#                 [72, 2, 837, 196, 7160, 43, 70, 0],
#                 [1020, 0, 154, 8551, 5550, 300, 0, 18289]])
#_2021_2_Gaofen
cm = np.array([[6315888, 75, 7391, 5193, 56410, 28452, 3395, 235],
                [0, 87179, 1368, 7630, 1125, 7355, 0, 210],
                [25585, 787, 108179, 4238, 89821, 331801, 460, 8],
                [7802, 2886, 1801, 2146330, 8188, 17127, 115, 14555],
                [11720, 9755, 1943, 9296, 959289, 79209, 5874, 30947],
                [299, 98130, 1872, 21221, 42718, 564452, 0, 29749],
                [7899, 509, 2201, 352, 1207, 1624, 2141, 0],
                [46, 0, 0, 1511, 7299, 238, 0, 33566]])

ind_array = np.arange(len(labels))
x, y = np.meshgrid(ind_array, ind_array)
fig, ax = plt.subplots()

for x_val, y_val in zip(x.flatten(), y.flatten()):
    c = cm[y_val][x_val]
    print(x_val)
    print(y_val)
    print('-'*50)
    if x_val == y_val:
        plt.text(x_val, y_val, c, color='Red', fontsize=10, va='center', ha='center') #"%0.2f" % (c,)
    else:
        plt.text(x_val, y_val, c, color='Black', fontsize=10, va='center', ha='center')  # "%0.2f" % (c,)

# offset the tick
plt.gca().set_xticks(tick_marks, minor=True)
plt.gca().set_yticks(tick_marks, minor=True)
plt.gca().xaxis.set_ticks_position('none')
plt.gca().yaxis.set_ticks_position('none')
plt.grid(True, which='minor', linestyle='-') #, linewidth=1
ax.tick_params(top=True, bottom=False, labeltop=True, labelbottom=False)
plt.tick_params(bottom=False, top=False, left=False, right=False)
plt.gcf().subplots_adjust(bottom=0.15)

plot_confusion_matrix(cm, title='')
fig.tight_layout()
# show confusion matrix
# plt.savefig('../Data/confusion_matrix.png', format='png')
plt.savefig(r'D:\Gaofen_2021_2_CM.jpg',dpi = 500, bbox_inches='tight')
plt.show()

